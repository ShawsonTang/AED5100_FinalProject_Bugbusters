/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.FactoryManagerRole;

import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Organization.DoctorOrganization;
import Business.Organization.FactoryOrganization;
import Business.Organization.Organization;
import Business.Organization.WarehouseOrganization;
import Business.UserAccount.UserAccount;
import Business.Vaccine.Vaccine;
import Business.WorkQueue.VaccineProduceRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Jasmine
 */
public class FactoryManagerWorkAreaJPanel extends javax.swing.JPanel {
    private JPanel container;
    private FactoryOrganization organization;
    private Enterprise enterprise;
    private UserAccount userAccount;
    private EcoSystem system;

    /**
     * Creates new form FactoryManagerJPanel
     */
    public FactoryManagerWorkAreaJPanel(JPanel container, UserAccount userAccount, FactoryOrganization organization, Enterprise enterprise, EcoSystem system) {
        initComponents();
        this.container = container;
        this.organization = organization;
        this.enterprise = enterprise;
        this.userAccount = userAccount;
        this.system = system;
        populateTextField();
        populateVaccineProduceTable();
        populateVaccineRequestTable();
        populateWarehouseComboBox();
    }
    
     void populateTextField() {
        nameText.setText(userAccount.getEmployee().getName());
        phoneNumText.setText(userAccount.getEmployee().getPhoneNum());
        photoLabel.setIcon(userAccount.getEmployee().getPhoto());
//        System.out.println(userAccount.getEmployee().getPhoto());
        usernameText.setText(userAccount.getUsername());
        passwordText.setText(userAccount.getPassword());
    }
     
     void populateVaccineProduceTable() {
        DefaultTableModel model = (DefaultTableModel) vaccineTable.getModel();
        model.setRowCount(0);        
        for (Vaccine v : organization.getVaccineDirectory().getVaccineList()) {
            Object[] row = new Object[5];
            row[0] = v;
            row[1] = v.getId();
            row[2] = v.getDoseProdeced();
            row[3] = v.getProDate();
            row[4] = v.getExpDate();
            model.addRow(row);
        }
     }
     
     void populateVaccineRequestTable() {
        DefaultTableModel model = (DefaultTableModel) vaccineRequestTable.getModel();
        model.setRowCount(0);
        Object[] row = new Object[4];        
        for (WorkRequest r : organization.getWorkQueue().getWorkRequestList()) {            
            if (r instanceof VaccineProduceRequest) {
                row[0] = r;
                row[1] = ((VaccineProduceRequest) r).getDosesRequest();
                row[2] = r.getReceiver();
                row[3] = r.getStatus();
                model.addRow(row);
            }
        }
     }
     
     void populateWarehouseComboBox() {
         warehouseJComboBox.removeAllItems();
         for (Organization o : enterprise.getOrganizationDirectory().getOrganizationList()) {
             if (o.getOrganizationType() == Organization.OrganizationType.Warehouse) {
                 warehouseJComboBox.addItem(o);
             }
         }
         
     }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel7 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        enterpriseLabel = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        addressText = new javax.swing.JTextField();
        nameText = new javax.swing.JTextField();
        phoneNumText = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        usernameText = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        passwordText = new javax.swing.JTextField();
        produceBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        vaccineRequestTable = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        vaccineTable = new javax.swing.JTable();
        viewProviderButton = new javax.swing.JButton();
        declineProviderButton = new javax.swing.JButton();
        approveBtn = new javax.swing.JButton();
        viewVaccineButton = new javax.swing.JButton();
        storeButton = new javax.swing.JButton();
        photoLabel = new javax.swing.JLabel();
        warehouseJComboBox = new javax.swing.JComboBox<>();

        jLabel7.setText("Phone Number:");

        jLabel6.setText("Address:");

        enterpriseLabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        enterpriseLabel.setText("Factory Manager");

        jLabel10.setText("Photo:");

        addressText.setEditable(false);
        addressText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addressTextActionPerformed(evt);
            }
        });

        nameText.setEditable(false);
        nameText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nameTextActionPerformed(evt);
            }
        });

        phoneNumText.setEditable(false);
        phoneNumText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                phoneNumTextActionPerformed(evt);
            }
        });

        jLabel9.setText("Password:");

        jLabel8.setText("Username:");

        usernameText.setEditable(false);
        usernameText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                usernameTextActionPerformed(evt);
            }
        });

        jLabel2.setText("Name:");

        passwordText.setEditable(false);
        passwordText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                passwordTextActionPerformed(evt);
            }
        });

        produceBtn.setText("Produce");
        produceBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                produceBtnActionPerformed(evt);
            }
        });

        vaccineRequestTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Vaccine", "Doses Request", "Sender", "Status"
            }
        ));
        jScrollPane1.setViewportView(vaccineRequestTable);

        vaccineTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, "", null, "", ""},
                {null, null, null, "", ""},
                {null, null, null, "", ""},
                {null, null, null, "", ""}
            },
            new String [] {
                "Vaccine", "Vaccine ID", "Doses", "Manufacture Date", "Expiration Date"
            }
        ));
        jScrollPane2.setViewportView(vaccineTable);
        if (vaccineTable.getColumnModel().getColumnCount() > 0) {
            vaccineTable.getColumnModel().getColumn(3).setMinWidth(200);
            vaccineTable.getColumnModel().getColumn(4).setMinWidth(200);
        }

        viewProviderButton.setText("View");

        declineProviderButton.setText("Decline");

        approveBtn.setText("Approve");
        approveBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                approveBtnActionPerformed(evt);
            }
        });

        viewVaccineButton.setText("View");

        storeButton.setText("Store");
        storeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                storeButtonActionPerformed(evt);
            }
        });

        warehouseJComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        warehouseJComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                warehouseJComboBoxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(52, 52, 52)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel6)
                            .addComponent(jLabel2)
                            .addComponent(jLabel7)
                            .addComponent(jLabel10))
                        .addGap(40, 40, 40)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(addressText, javax.swing.GroupLayout.DEFAULT_SIZE, 142, Short.MAX_VALUE)
                            .addComponent(nameText, javax.swing.GroupLayout.DEFAULT_SIZE, 142, Short.MAX_VALUE)
                            .addComponent(phoneNumText, javax.swing.GroupLayout.DEFAULT_SIZE, 142, Short.MAX_VALUE)
                            .addComponent(photoLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel8)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel9)
                            .addGap(36, 36, 36)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(usernameText, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(passwordText, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 176, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(viewProviderButton)
                        .addGap(46, 46, 46)
                        .addComponent(declineProviderButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(approveBtn))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(viewVaccineButton)
                        .addGap(192, 192, 192)
                        .addComponent(storeButton)
                        .addGap(18, 18, 18)
                        .addComponent(warehouseJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(99, 99, 99)
                        .addComponent(produceBtn)
                        .addGap(0, 93, Short.MAX_VALUE))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 743, Short.MAX_VALUE)
                    .addComponent(jScrollPane1))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(enterpriseLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(287, 287, 287))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(enterpriseLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(59, 59, 59)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(nameText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(addressText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(23, 23, 23)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(phoneNumText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(36, 36, 36)
                                .addComponent(jLabel10)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, 57, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(photoLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(usernameText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 67, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(passwordText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(26, 26, 26))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(viewProviderButton)
                            .addComponent(declineProviderButton)
                            .addComponent(approveBtn))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(33, 33, 33)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(storeButton)
                            .addComponent(viewVaccineButton)
                            .addComponent(produceBtn)
                            .addComponent(warehouseJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void addressTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addressTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_addressTextActionPerformed

    private void nameTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nameTextActionPerformed

    private void phoneNumTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_phoneNumTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_phoneNumTextActionPerformed

    private void usernameTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_usernameTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_usernameTextActionPerformed

    private void passwordTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_passwordTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_passwordTextActionPerformed

    private void produceBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_produceBtnActionPerformed
        // TODO add your handling code here:
        int selectedRow = vaccineTable.getSelectedRow();
        if (selectedRow < 0){
            JOptionPane.showMessageDialog(null,"Please select a row from table first.","Warning",JOptionPane.WARNING_MESSAGE);
            return;
        }
        Vaccine selectedVaccine = (Vaccine) vaccineTable.getValueAt(selectedRow, 0);
        ProduceVaccineJPanel produceVaccineJPanel = new ProduceVaccineJPanel(container, selectedVaccine);
        container.add("produceVaccineJPanel", produceVaccineJPanel);
        CardLayout layout = (CardLayout) container.getLayout();
        layout.next(container);
    }//GEN-LAST:event_produceBtnActionPerformed

    private void storeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_storeButtonActionPerformed
        // TODO add your handling code here:
        int selectedRow = vaccineTable.getSelectedRow();
        if (selectedRow < 0){
            JOptionPane.showMessageDialog(null,"Please select a row from table first.","Warning",JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        WarehouseOrganization warehouseOrganization = (WarehouseOrganization) warehouseJComboBox.getSelectedItem();
        Vaccine selectedVaccine = (Vaccine) vaccineTable.getValueAt(selectedRow, 0);
        if (selectedVaccine.getId() != 0) {
            String type = selectedVaccine.getVaccineType();
            int id = selectedVaccine.getId();
            int doseP = selectedVaccine.getDoseProdeced();
            int doesS = selectedVaccine.getDoseProdeced();
            Date proDate = selectedVaccine.getProDate();
            Date expDate = selectedVaccine.getExpDate();

            Vaccine producedVaccine = new Vaccine(type, id, doseP, doesS, proDate, expDate);
            Vaccine vaccineKey = null;
            for (Vaccine v : warehouseOrganization.getVaccineDirectory().getVaccineMap().keySet()) {
                if (v.getVaccineType().equals(selectedVaccine.getVaccineType())) {
                    vaccineKey = v;
                }
            }
            warehouseOrganization.getVaccineDirectory().getVaccineMap().get(vaccineKey).add(producedVaccine);        
            selectedVaccine.setId(0);
            selectedVaccine.setDoseProdeced(0);
            selectedVaccine.setProDate(null);
            selectedVaccine.setExpDate(null);                         
            
            //Change the status to prodeced and stored in vaccine request table
            DefaultTableModel model = (DefaultTableModel) vaccineRequestTable.getModel();
            for (int count = 0; count < model.getRowCount(); count++) {
                VaccineProduceRequest target = (VaccineProduceRequest) model.getValueAt(count, 0);
                if (selectedVaccine.getVaccineType().equals(target.getVaccine().getVaccineType())) {
                    target.setStatus("Produced and Stored");
                }
            }
            populateVaccineProduceTable();
            populateVaccineRequestTable();
        } else {
            JOptionPane.showMessageDialog(null,"Please produce the vaccine first!","Warning",JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_storeButtonActionPerformed

    private void warehouseJComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_warehouseJComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_warehouseJComboBoxActionPerformed

    private void approveBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_approveBtnActionPerformed
        int selectedRow = vaccineRequestTable.getSelectedRow();
        if (selectedRow < 0){
            JOptionPane.showMessageDialog(null,"Please select a row from table first.","Warning",JOptionPane.WARNING_MESSAGE);
            return;
        }
        VaccineProduceRequest vaccineProduceRequest = (VaccineProduceRequest) vaccineRequestTable.getValueAt(selectedRow, 0);
        vaccineProduceRequest.setStatus("Approved");
        Vaccine selectedVaccine = vaccineProduceRequest.getVaccine();
        DefaultTableModel model = (DefaultTableModel) vaccineTable.getModel();
        for (int count = 0; count < model.getRowCount(); count++) {
            Vaccine target = (Vaccine) model.getValueAt(count, 0);
            if (selectedVaccine.getVaccineType().equals(target.getVaccineType())) {
                target.setDoseProdeced(vaccineProduceRequest.getDosesRequest());
            }
        }
        populateVaccineProduceTable();
        populateVaccineRequestTable();
    }//GEN-LAST:event_approveBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField addressText;
    private javax.swing.JButton approveBtn;
    private javax.swing.JButton declineProviderButton;
    private javax.swing.JLabel enterpriseLabel;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField nameText;
    private javax.swing.JTextField passwordText;
    private javax.swing.JTextField phoneNumText;
    private javax.swing.JLabel photoLabel;
    private javax.swing.JButton produceBtn;
    private javax.swing.JButton storeButton;
    private javax.swing.JTextField usernameText;
    private javax.swing.JTable vaccineRequestTable;
    private javax.swing.JTable vaccineTable;
    private javax.swing.JButton viewProviderButton;
    private javax.swing.JButton viewVaccineButton;
    private javax.swing.JComboBox<Object> warehouseJComboBox;
    // End of variables declaration//GEN-END:variables
}
