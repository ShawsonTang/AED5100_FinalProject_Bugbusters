/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.Doctor;

import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Organization.DoctorOrganization;
import Business.Organization.HealthDepartmentOrganization;
import Business.Organization.Organization;
import Business.UserAccount.UserAccount;
import Business.Vaccine.Vaccine;
import Business.WorkQueue.VaccineDoctorRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.awt.Color;
import java.awt.Font;
import java.io.File;
import javax.swing.BorderFactory;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.border.Border;
import javax.swing.filechooser.FileFilter;
import javax.swing.table.DefaultTableModel;
import userinterface.SignIn;

/**
 *
 * @author kim
 */
public class DoctorWorkAreaJPanel extends javax.swing.JPanel {

    /**
     * Creates new form DoctorWorkAreaJPanel
     */
    private JPanel container;
    private DoctorOrganization organization;
    private Enterprise enterprise;
    private UserAccount userAccount;
    private EcoSystem system;
    private Vaccine vaccine;
    private SignIn frame;
  
    
    public DoctorWorkAreaJPanel(JPanel container, SignIn frame, UserAccount userAccount, DoctorOrganization organization, Enterprise enterprise, EcoSystem system) {
        initComponents();
        this.container = container;
        this.frame = frame;
        this.organization = organization;
        this.enterprise = enterprise;
        this.userAccount = userAccount;
        this.system = system;
        setTableProperty();
        populateRequestTable();
        populateVaccineTable();
        populateTextField();
   
    }
    
    private void setTableProperty() {
        vaccineRequestTable.getTableHeader().setFont(new Font("Segoe UI", Font.BOLD, 15));
        vaccineRequestTable.getTableHeader().setOpaque(false);
        vaccineRequestTable.getTableHeader().setBackground(new Color(120, 168, 252));
        vaccineRequestTable.getTableHeader().setForeground(new Color(0, 0, 0));
        
        vaccineTable.getTableHeader().setFont(new Font("Segoe UI", Font.BOLD, 15));
        vaccineTable.getTableHeader().setOpaque(false);
        vaccineTable.getTableHeader().setBackground(new Color(120, 168, 252));
        vaccineTable.getTableHeader().setForeground(new Color(0, 0, 0));                                      
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        infoJPanel1 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        nameText = new javax.swing.JTextField();
        addressText = new javax.swing.JTextField();
        usernameText = new javax.swing.JTextField();
        passwordText = new javax.swing.JTextField();
        phoneNumText = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        emailText = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        editBtn = new javax.swing.JButton();
        saveBtn = new javax.swing.JButton();
        photoLabel1 = new javax.swing.JLabel();
        leftJPanel = new javax.swing.JPanel();
        requestPanelArea = new javax.swing.JPanel();
        requestAreaBtn = new javax.swing.JButton();
        purchasePanelArea = new javax.swing.JPanel();
        confirmAreaBtn = new javax.swing.JButton();
        logOutBtn = new javax.swing.JButton();
        topJPanel = new javax.swing.JPanel();
        headLabel = new javax.swing.JLabel();
        workAreaJPanel = new javax.swing.JPanel();
        requestJPanel = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        vaccineRequestTable = new javax.swing.JTable();
        jLabel19 = new javax.swing.JLabel();
        tableDesLabel1 = new javax.swing.JLabel();
        vaccineConfirmJPanel = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        vaccineTable = new javax.swing.JTable();
        selectBtn = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        vaccineText = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        doseRequestText = new javax.swing.JTextField();
        healthDepartmentComboBox = new javax.swing.JComboBox<>();
        jLabel12 = new javax.swing.JLabel();
        confirmBtn = new javax.swing.JButton();
        jLabel20 = new javax.swing.JLabel();
        tableDesLabel = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        photoLabel = new javax.swing.JLabel();
        uploadLabel = new javax.swing.JLabel();

        setPreferredSize(new java.awt.Dimension(1300, 700));
        setSize(new java.awt.Dimension(1300, 700));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        infoJPanel1.setBackground(new java.awt.Color(71, 120, 197));

        jLabel4.setFont(new java.awt.Font("Al Bayan", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("PHONE");

        nameText.setEditable(false);
        nameText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nameTextActionPerformed(evt);
            }
        });

        addressText.setEditable(false);
        addressText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addressTextActionPerformed(evt);
            }
        });

        usernameText.setEditable(false);
        usernameText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                usernameTextActionPerformed(evt);
            }
        });

        passwordText.setEditable(false);
        passwordText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                passwordTextActionPerformed(evt);
            }
        });

        phoneNumText.setEditable(false);
        phoneNumText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                phoneNumTextActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Al Bayan", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("NAME");

        jLabel6.setFont(new java.awt.Font("Al Bayan", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("ADDRESS");

        jLabel7.setFont(new java.awt.Font("Al Bayan", 1, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("USERNAME");

        jLabel8.setFont(new java.awt.Font("Al Bayan", 1, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("PASSWORD");

        jLabel9.setFont(new java.awt.Font("Al Bayan", 1, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("EMAIL");

        emailText.setEditable(false);
        emailText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                emailTextActionPerformed(evt);
            }
        });

        jLabel13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/icons8-calendar.png"))); // NOI18N

        jLabel14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/icons8-sign_mail.png"))); // NOI18N

        jLabel15.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/icons8-cell_phone.png"))); // NOI18N

        jLabel16.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/icons8-address.png"))); // NOI18N

        editBtn.setBackground(new java.awt.Color(51, 153, 255));
        editBtn.setFont(new java.awt.Font("Al Bayan", 1, 18)); // NOI18N
        editBtn.setForeground(new java.awt.Color(255, 255, 255));
        editBtn.setText("Edit");
        editBtn.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        editBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        editBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                editBtnMouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                editBtnMouseEntered(evt);
            }
        });
        editBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editBtnActionPerformed(evt);
            }
        });

        saveBtn.setBackground(new java.awt.Color(51, 153, 255));
        saveBtn.setFont(new java.awt.Font("Al Bayan", 1, 18)); // NOI18N
        saveBtn.setForeground(new java.awt.Color(255, 255, 255));
        saveBtn.setText("Save");
        saveBtn.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        saveBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        saveBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                saveBtnMouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                saveBtnMouseEntered(evt);
            }
        });
        saveBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveBtnActionPerformed(evt);
            }
        });

        photoLabel1.setBackground(new java.awt.Color(255, 255, 255));
        photoLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/getimmunized.gif"))); // NOI18N

        javax.swing.GroupLayout infoJPanel1Layout = new javax.swing.GroupLayout(infoJPanel1);
        infoJPanel1.setLayout(infoJPanel1Layout);
        infoJPanel1Layout.setHorizontalGroup(
            infoJPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(infoJPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(infoJPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator1)
                    .addGroup(infoJPanel1Layout.createSequentialGroup()
                        .addGroup(infoJPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(infoJPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(infoJPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(43, 43, 43)
                                .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(43, 43, 43)))
                        .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(infoJPanel1Layout.createSequentialGroup()
                        .addGroup(infoJPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(editBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8)
                            .addComponent(jLabel7)
                            .addComponent(jLabel6)
                            .addComponent(jLabel9))
                        .addGap(18, 18, 18)
                        .addGroup(infoJPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(infoJPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(addressText, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(phoneNumText, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(infoJPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(infoJPanel1Layout.createSequentialGroup()
                                    .addGap(32, 32, 32)
                                    .addComponent(saveBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(passwordText, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(usernameText, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, infoJPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(nameText, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(emailText, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(infoJPanel1Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(photoLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(15, Short.MAX_VALUE))
        );
        infoJPanel1Layout.setVerticalGroup(
            infoJPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(infoJPanel1Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(infoJPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(infoJPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(nameText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(infoJPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(phoneNumText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(infoJPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(addressText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(infoJPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(emailText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(infoJPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(usernameText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(infoJPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(passwordText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(infoJPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(editBtn)
                    .addComponent(saveBtn))
                .addGap(33, 33, 33)
                .addComponent(photoLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(48, Short.MAX_VALUE))
        );

        add(infoJPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 160, 300, 540));

        leftJPanel.setBackground(new java.awt.Color(23, 35, 51));

        requestPanelArea.setBackground(new java.awt.Color(41, 57, 80));

        requestAreaBtn.setBackground(new java.awt.Color(41, 57, 80));
        requestAreaBtn.setFont(new java.awt.Font("Menlo", 1, 18)); // NOI18N
        requestAreaBtn.setForeground(new java.awt.Color(255, 255, 255));
        requestAreaBtn.setText("Request");
        requestAreaBtn.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        requestAreaBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        requestAreaBtn.setPreferredSize(new java.awt.Dimension(70, 24));
        requestAreaBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                requestAreaBtnMouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                requestAreaBtnMouseEntered(evt);
            }
        });
        requestAreaBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                requestAreaBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout requestPanelAreaLayout = new javax.swing.GroupLayout(requestPanelArea);
        requestPanelArea.setLayout(requestPanelAreaLayout);
        requestPanelAreaLayout.setHorizontalGroup(
            requestPanelAreaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(requestPanelAreaLayout.createSequentialGroup()
                .addComponent(requestAreaBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        requestPanelAreaLayout.setVerticalGroup(
            requestPanelAreaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(requestAreaBtn, javax.swing.GroupLayout.DEFAULT_SIZE, 80, Short.MAX_VALUE)
        );

        purchasePanelArea.setBackground(new java.awt.Color(23, 35, 51));

        confirmAreaBtn.setBackground(new java.awt.Color(41, 57, 80));
        confirmAreaBtn.setFont(new java.awt.Font("Menlo", 1, 18)); // NOI18N
        confirmAreaBtn.setForeground(new java.awt.Color(255, 255, 255));
        confirmAreaBtn.setText("Patient");
        confirmAreaBtn.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        confirmAreaBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        confirmAreaBtn.setPreferredSize(new java.awt.Dimension(70, 24));
        confirmAreaBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                confirmAreaBtnMouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                confirmAreaBtnMouseEntered(evt);
            }
        });
        confirmAreaBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confirmAreaBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout purchasePanelAreaLayout = new javax.swing.GroupLayout(purchasePanelArea);
        purchasePanelArea.setLayout(purchasePanelAreaLayout);
        purchasePanelAreaLayout.setHorizontalGroup(
            purchasePanelAreaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(purchasePanelAreaLayout.createSequentialGroup()
                .addComponent(confirmAreaBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        purchasePanelAreaLayout.setVerticalGroup(
            purchasePanelAreaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(confirmAreaBtn, javax.swing.GroupLayout.DEFAULT_SIZE, 80, Short.MAX_VALUE)
        );

        logOutBtn.setBackground(new java.awt.Color(51, 153, 255));
        logOutBtn.setFont(new java.awt.Font("Al Bayan", 1, 18)); // NOI18N
        logOutBtn.setForeground(new java.awt.Color(255, 255, 255));
        logOutBtn.setText("Log out");
        logOutBtn.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        logOutBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        logOutBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                logOutBtnMouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                logOutBtnMouseEntered(evt);
            }
        });
        logOutBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logOutBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout leftJPanelLayout = new javax.swing.GroupLayout(leftJPanel);
        leftJPanel.setLayout(leftJPanelLayout);
        leftJPanelLayout.setHorizontalGroup(
            leftJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(leftJPanelLayout.createSequentialGroup()
                .addGroup(leftJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(purchasePanelArea, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(requestPanelArea, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(logOutBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        leftJPanelLayout.setVerticalGroup(
            leftJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, leftJPanelLayout.createSequentialGroup()
                .addGap(110, 110, 110)
                .addComponent(requestPanelArea, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(82, 82, 82)
                .addComponent(purchasePanelArea, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 265, Short.MAX_VALUE)
                .addComponent(logOutBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        add(leftJPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 130, 697));

        topJPanel.setBackground(new java.awt.Color(71, 120, 197));

        headLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        headLabel.setText("Dynamic Label Text....");
        headLabel.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        headLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                headLabelMouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                headLabelMouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                headLabelMouseEntered(evt);
            }
        });

        javax.swing.GroupLayout topJPanelLayout = new javax.swing.GroupLayout(topJPanel);
        topJPanel.setLayout(topJPanelLayout);
        topJPanelLayout.setHorizontalGroup(
            topJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(topJPanelLayout.createSequentialGroup()
                .addGap(225, 225, 225)
                .addComponent(headLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 620, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(325, Short.MAX_VALUE))
        );
        topJPanelLayout.setVerticalGroup(
            topJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(topJPanelLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(headLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(14, Short.MAX_VALUE))
        );

        add(topJPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 0, 1170, 50));

        workAreaJPanel.setLayout(new java.awt.CardLayout());

        requestJPanel.setBackground(new java.awt.Color(255, 255, 255));

        vaccineRequestTable.setFont(new java.awt.Font("American Typewriter", 0, 14)); // NOI18N
        vaccineRequestTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "VACCINE", "REQUEST ID", "DOSE REQUEST", "RECEIVER", "STATUS"
            }
        ));
        vaccineRequestTable.setSelectionBackground(new java.awt.Color(80, 148, 240));
        vaccineRequestTable.setShowVerticalLines(false);
        jScrollPane6.setViewportView(vaccineRequestTable);

        jLabel19.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/gotvaccineblue.gif"))); // NOI18N

        tableDesLabel1.setBackground(new java.awt.Color(204, 255, 204));
        tableDesLabel1.setFont(new java.awt.Font("American Typewriter", 1, 24)); // NOI18N
        tableDesLabel1.setForeground(new java.awt.Color(120, 168, 252));
        tableDesLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        tableDesLabel1.setText("Vaccine Request");
        tableDesLabel1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        tableDesLabel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableDesLabel1MouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                tableDesLabel1MouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                tableDesLabel1MouseEntered(evt);
            }
        });

        javax.swing.GroupLayout requestJPanelLayout = new javax.swing.GroupLayout(requestJPanel);
        requestJPanel.setLayout(requestJPanelLayout);
        requestJPanelLayout.setHorizontalGroup(
            requestJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane6)
            .addGroup(requestJPanelLayout.createSequentialGroup()
                .addGroup(requestJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(requestJPanelLayout.createSequentialGroup()
                        .addGap(203, 203, 203)
                        .addComponent(jLabel19))
                    .addGroup(requestJPanelLayout.createSequentialGroup()
                        .addGap(101, 101, 101)
                        .addComponent(tableDesLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 620, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(149, Short.MAX_VALUE))
        );
        requestJPanelLayout.setVerticalGroup(
            requestJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(requestJPanelLayout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(tableDesLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 166, Short.MAX_VALUE)
                .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 347, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        workAreaJPanel.add(requestJPanel, "card2");

        vaccineConfirmJPanel.setBackground(new java.awt.Color(255, 255, 255));
        vaccineConfirmJPanel.setPreferredSize(new java.awt.Dimension(1300, 697));

        vaccineTable.setFont(new java.awt.Font("American Typewriter", 0, 14)); // NOI18N
        vaccineTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Vaccine", "DESCRIPTION"
            }
        ));
        vaccineTable.setSelectionBackground(new java.awt.Color(80, 148, 240));
        vaccineTable.setShowVerticalLines(false);
        jScrollPane5.setViewportView(vaccineTable);
        if (vaccineTable.getColumnModel().getColumnCount() > 0) {
            vaccineTable.getColumnModel().getColumn(1).setMinWidth(700);
        }

        selectBtn.setBackground(new java.awt.Color(102, 102, 102));
        selectBtn.setFont(new java.awt.Font("Menlo", 1, 18)); // NOI18N
        selectBtn.setText("Select");
        selectBtn.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        selectBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        selectBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                selectBtnMouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                selectBtnMouseEntered(evt);
            }
        });
        selectBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectBtnActionPerformed(evt);
            }
        });

        jLabel10.setBackground(new java.awt.Color(0, 0, 0));
        jLabel10.setFont(new java.awt.Font("Al Bayan", 1, 18)); // NOI18N
        jLabel10.setText("Vaccine");

        vaccineText.setEditable(false);
        vaccineText.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        vaccineText.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        vaccineText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vaccineTextActionPerformed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Al Bayan", 1, 18)); // NOI18N
        jLabel11.setText("Doses");

        doseRequestText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                doseRequestTextActionPerformed(evt);
            }
        });

        healthDepartmentComboBox.setBackground(new java.awt.Color(120, 168, 252));
        healthDepartmentComboBox.setFont(new java.awt.Font("Menlo", 2, 18)); // NOI18N
        healthDepartmentComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel12.setFont(new java.awt.Font("Al Bayan", 1, 18)); // NOI18N
        jLabel12.setText("Health Department");

        confirmBtn.setBackground(new java.awt.Color(102, 102, 102));
        confirmBtn.setFont(new java.awt.Font("Menlo", 1, 18)); // NOI18N
        confirmBtn.setText("Confirm");
        confirmBtn.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        confirmBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        confirmBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                confirmBtnMouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                confirmBtnMouseEntered(evt);
            }
        });
        confirmBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confirmBtnActionPerformed(evt);
            }
        });

        jLabel20.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/vaccine005.gif"))); // NOI18N

        tableDesLabel.setBackground(new java.awt.Color(204, 255, 204));
        tableDesLabel.setFont(new java.awt.Font("American Typewriter", 1, 24)); // NOI18N
        tableDesLabel.setForeground(new java.awt.Color(120, 168, 252));
        tableDesLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        tableDesLabel.setText("Vaccine Description");
        tableDesLabel.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        tableDesLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableDesLabelMouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                tableDesLabelMouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                tableDesLabelMouseEntered(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(8, 41, 87));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 266, Short.MAX_VALUE)
        );

        jPanel2.setBackground(new java.awt.Color(8, 41, 87));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 140, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 264, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout vaccineConfirmJPanelLayout = new javax.swing.GroupLayout(vaccineConfirmJPanel);
        vaccineConfirmJPanel.setLayout(vaccineConfirmJPanelLayout);
        vaccineConfirmJPanelLayout.setHorizontalGroup(
            vaccineConfirmJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(vaccineConfirmJPanelLayout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(vaccineConfirmJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(vaccineConfirmJPanelLayout.createSequentialGroup()
                        .addGap(590, 590, 590)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 591, javax.swing.GroupLayout.PREFERRED_SIZE)))
            .addGroup(vaccineConfirmJPanelLayout.createSequentialGroup()
                .addGroup(vaccineConfirmJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 870, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(vaccineConfirmJPanelLayout.createSequentialGroup()
                        .addGap(705, 705, 705)
                        .addComponent(selectBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(vaccineConfirmJPanelLayout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jLabel10)
                        .addGap(18, 18, 18)
                        .addComponent(vaccineText, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel11)
                        .addGap(18, 18, 18)
                        .addComponent(doseRequestText, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(vaccineConfirmJPanelLayout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jLabel12)
                        .addGap(18, 18, 18)
                        .addComponent(healthDepartmentComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(confirmBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(vaccineConfirmJPanelLayout.createSequentialGroup()
                .addGap(101, 101, 101)
                .addComponent(tableDesLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 620, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        vaccineConfirmJPanelLayout.setVerticalGroup(
            vaccineConfirmJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(vaccineConfirmJPanelLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(tableDesLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(selectBtn)
                .addGap(39, 39, 39)
                .addGroup(vaccineConfirmJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel10)
                    .addComponent(vaccineText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11)
                    .addComponent(doseRequestText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addGroup(vaccineConfirmJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(healthDepartmentComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(vaccineConfirmJPanelLayout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(vaccineConfirmJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel12)
                            .addComponent(confirmBtn))))
                .addGap(73, 73, 73)
                .addGroup(vaccineConfirmJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        workAreaJPanel.add(vaccineConfirmJPanel, "card3");

        add(workAreaJPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 50, 870, 650));

        jPanel3.setBackground(new java.awt.Color(120, 168, 252));

        photoLabel.setBackground(new java.awt.Color(255, 255, 255));

        uploadLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/icons8-upload.png"))); // NOI18N
        uploadLabel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        uploadLabel.setEnabled(false);
        uploadLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                uploadLabelMouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                uploadLabelMouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                uploadLabelMouseEntered(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(photoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 147, Short.MAX_VALUE)
                .addComponent(uploadLabel)
                .addGap(20, 20, 20))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(photoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 12, Short.MAX_VALUE))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addComponent(uploadLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 50, 300, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void nameTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nameTextActionPerformed

    private void addressTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addressTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_addressTextActionPerformed

    private void usernameTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_usernameTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_usernameTextActionPerformed

    private void passwordTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_passwordTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_passwordTextActionPerformed

    private void phoneNumTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_phoneNumTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_phoneNumTextActionPerformed

    private void emailTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_emailTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_emailTextActionPerformed

    private void editBtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_editBtnMouseExited
        Border btnBorder = BorderFactory.createMatteBorder(1, 1, 1, 1, Color.WHITE);
        editBtn.setBorder(btnBorder);
    }//GEN-LAST:event_editBtnMouseExited

    private void editBtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_editBtnMouseEntered
        Border btnBorder = BorderFactory.createMatteBorder(2, 2, 2, 2, Color.WHITE);
        editBtn.setBorder(btnBorder);
    }//GEN-LAST:event_editBtnMouseEntered

    private void editBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editBtnActionPerformed
        saveBtn.setEnabled(true);
        editBtn.setEnabled(false);
        uploadLabel.setEnabled(true);
        nameText.setEditable(true);
        phoneNumText.setEditable(true);
        addressText.setEditable(true);
        emailText.setEditable(true);
        usernameText.setEditable(true);
        passwordText.setEditable(true);

    }//GEN-LAST:event_editBtnActionPerformed

    private void saveBtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_saveBtnMouseExited
        Border btnBorder = BorderFactory.createMatteBorder(1, 1, 1, 1, Color.WHITE);
        saveBtn.setBorder(btnBorder);
    }//GEN-LAST:event_saveBtnMouseExited

    private void saveBtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_saveBtnMouseEntered
        Border btnBorder = BorderFactory.createMatteBorder(2, 2, 2, 2, Color.WHITE);
        saveBtn.setBorder(btnBorder);
    }//GEN-LAST:event_saveBtnMouseEntered

    private void saveBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveBtnActionPerformed

        String name = nameText.getText();
        String phone = phoneNumText.getText();
        String address = addressText.getText();
        String email = emailText.getText();
        String ua = usernameText.getText();
        String pa = passwordText.getText();
        if (name.equals("") || phone.equals("") || address.equals("") || email.equals("") || ua.equals("") || pa.equals("")) {
            JOptionPane.showMessageDialog(null,"Text area can not be empty","Warning",JOptionPane.WARNING_MESSAGE);
            return;
        }
        saveBtn.setEnabled(false);
        editBtn.setEnabled(true);
        uploadLabel.setEnabled(false);
        userAccount.getEmployee().setName(name);
        userAccount.getEmployee().setPhoneNum(phone);
        userAccount.getEmployee().setAddress(address);
        userAccount.getEmployee().setEmail(email);
        userAccount.setUsername(ua);
        userAccount.setPassword(pa);

        nameText.setEditable(false);
        phoneNumText.setEditable(false);
        addressText.setEditable(false);
        emailText.setEditable(false);
        usernameText.setEditable(false);
        passwordText.setEditable(false);
        JOptionPane.showMessageDialog(null,"Modify personal information successfully");
    }//GEN-LAST:event_saveBtnActionPerformed

    private void requestAreaBtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_requestAreaBtnMouseExited
        Border btnBorder = BorderFactory.createMatteBorder(1, 1, 1, 1, Color.BLACK);
        requestAreaBtn.setBorder(btnBorder);
    }//GEN-LAST:event_requestAreaBtnMouseExited

    private void requestAreaBtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_requestAreaBtnMouseEntered
        Border btnBorder = BorderFactory.createMatteBorder(1, 1, 1, 1, Color.WHITE);
        requestAreaBtn.setBorder(btnBorder);
    }//GEN-LAST:event_requestAreaBtnMouseEntered

    private void requestAreaBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_requestAreaBtnActionPerformed
            populateRequestTable();                  
            activeColor(requestPanelArea);
            inactiveColor(purchasePanelArea);
            vaccineConfirmJPanel.setVisible(false);
            requestJPanel.setVisible(true);
     
    }//GEN-LAST:event_requestAreaBtnActionPerformed

    private void logOutBtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logOutBtnMouseExited
        logOutBtn.setBackground(new Color(51, 153, 255));
        Border btnBorder = BorderFactory.createMatteBorder(1, 1, 1, 1, Color.WHITE);
        logOutBtn.setBorder(btnBorder);
    }//GEN-LAST:event_logOutBtnMouseExited

    private void logOutBtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logOutBtnMouseEntered
        logOutBtn.setBackground(new Color(80, 148, 240));
        Border btnBorder = BorderFactory.createMatteBorder(2, 2, 2, 2, Color.WHITE);
        logOutBtn.setBorder(btnBorder);
    }//GEN-LAST:event_logOutBtnMouseEntered

    private void logOutBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logOutBtnActionPerformed
        container.remove(this);
        frame.setJFrameVisible();
        frame.getB4OUtil().storeSystem(system);
    }//GEN-LAST:event_logOutBtnActionPerformed

    private void headLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_headLabelMouseClicked
        //        RegistrationJPanel registrationJPanel = new RegistrationJPanel(container, organization, network);
        
        //        container.add("registrationJPanel", registrationJPanel);
        //        CardLayout layout = (CardLayout) container.getLayout();
        //        layout.next(container);
    }//GEN-LAST:event_headLabelMouseClicked

    private void headLabelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_headLabelMouseExited
        headLabel.setBorder(null);
    }//GEN-LAST:event_headLabelMouseExited

    private void headLabelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_headLabelMouseEntered
       
    }//GEN-LAST:event_headLabelMouseEntered

//    private void populateVaccineDisplayTable() {
//        DefaultTableModel model = (DefaultTableModel) vaccineDisplayTable.getModel();
//        model.setRowCount(0);
//        
//        for (Vaccine keyV : organization.getVaccineDirectory().getVaccineMap().keySet()) {
//            int count = 0;            
//            for (Vaccine v : organization.getVaccineDirectory().getVaccineMap().get(keyV)) {                
//                count += v.getDoseInStock();
//            }    
//            Object[] row = new Object[1];
//            row[0] = keyV;
//            //row[1] = count; 
//            //row[2] = count == 0 ? "Out of Stock" : null;
//            model.addRow(row);
//        }
//    }
//    
     class ImageFilter extends FileFilter {
        @Override
        public boolean accept(File f) {
            if (f.isDirectory()) {
                return true;
            }
            String fileName = f.getName();
            int i = f.getName().lastIndexOf('.');
            return fileName.substring(i + 1).equals("jpg") || fileName.substring(i + 1).equals("png");
        }
        @Override
        public String getDescription() {
            return "please select .jpg and .png file";
        }
    }
    private void uploadLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_uploadLabelMouseClicked
        JFileChooser chooser = new JFileChooser();
        chooser.addChoosableFileFilter(new ImageFilter());
        chooser.setAcceptAllFileFilterUsed(false);
        chooser.showSaveDialog(null);
        if (chooser.getSelectedFile() != null) {
            File f = chooser.getSelectedFile();
            photoLabel.setIcon(new ImageIcon(f.toString()));
        }
        userAccount.getEmployee().setPhoto((ImageIcon)photoLabel.getIcon());

    }//GEN-LAST:event_uploadLabelMouseClicked

    private void uploadLabelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_uploadLabelMouseExited
        uploadLabel.setBorder(null);
    }//GEN-LAST:event_uploadLabelMouseExited

    private void uploadLabelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_uploadLabelMouseEntered
        Border btnBorder = BorderFactory.createMatteBorder(1, 1, 1, 1, Color.WHITE);
        uploadLabel.setBorder(btnBorder);
    }//GEN-LAST:event_uploadLabelMouseEntered

    private void selectBtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_selectBtnMouseExited
        Border btnBorder = BorderFactory.createMatteBorder(1, 1, 1, 1, Color.BLACK);
        selectBtn.setBorder(btnBorder);
    }//GEN-LAST:event_selectBtnMouseExited

    private void selectBtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_selectBtnMouseEntered
        Border btnBorder = BorderFactory.createMatteBorder(2, 2, 2, 2, Color.BLACK);
        selectBtn.setBorder(btnBorder);
    }//GEN-LAST:event_selectBtnMouseEntered

    private void selectBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectBtnActionPerformed
        
        int selectedRow = vaccineTable.getSelectedRow();
        if (selectedRow < 0){
            JOptionPane.showMessageDialog(null,"Please select a row from table first.","Warning",JOptionPane.WARNING_MESSAGE);
            return;
        }
        vaccine = (Vaccine) vaccineTable.getValueAt(selectedRow, 0);
        Vaccine selectedVaccine = (Vaccine) vaccineTable.getValueAt(selectedRow, 0);
        vaccineText.setText(selectedVaccine.getVaccineType());
        vaccineText.setEditable(false);
        
        
    }//GEN-LAST:event_selectBtnActionPerformed

    private void vaccineTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vaccineTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_vaccineTextActionPerformed

    private void doseRequestTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_doseRequestTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_doseRequestTextActionPerformed

    private void confirmBtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_confirmBtnMouseExited
        Border btnBorder = BorderFactory.createMatteBorder(1, 1, 1, 1, Color.BLACK);
        confirmBtn.setBorder(btnBorder);
    }//GEN-LAST:event_confirmBtnMouseExited

    private void confirmBtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_confirmBtnMouseEntered
        Border btnBorder = BorderFactory.createMatteBorder(2, 2, 2, 2, Color.BLACK);
        confirmBtn.setBorder(btnBorder);
    }//GEN-LAST:event_confirmBtnMouseEntered
    private void populateHealthComboBox() {
     healthDepartmentComboBox.removeAllItems();
        for (Organization f : enterprise.getOrganizationDirectory().getOrganizationList()) {
            System.out.println(f);
            if (f.getOrganizationType().equals(Organization.OrganizationType.HealthDepartment)) {
                healthDepartmentComboBox.addItem(f);
            }
        }
        
        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
    private void confirmBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confirmBtnActionPerformed
        try {
            VaccineDoctorRequest request = new VaccineDoctorRequest();
            int dose = Integer.parseInt(doseRequestText.getText());
            HealthDepartmentOrganization healthDepartmentOrganization = (HealthDepartmentOrganization) healthDepartmentComboBox.getSelectedItem();            
            if (vaccine == null || vaccine.getVaccineType().equals("") || vaccineText.getText().equals("")) {
                JOptionPane.showMessageDialog(null,"Please select a vaccine first!");
                return;
            }
            
            
            DefaultTableModel requestModel = (DefaultTableModel) vaccineRequestTable.getModel();
            for (int i = 0; i < requestModel.getRowCount(); i++) {
             VaccineDoctorRequest targetRequest = (VaccineDoctorRequest) requestModel.getValueAt(i, 0);
             if (targetRequest.getVaccine().getVaccineType().equalsIgnoreCase(vaccine.getVaccineType())) {
                 if (targetRequest.getReceiver().getName().equalsIgnoreCase(healthDepartmentOrganization.getName())) {
                    if (!targetRequest.getStatus().equalsIgnoreCase("Approved")) {
                        JOptionPane.showMessageDialog(null,"One request of this kind vaccine is still processing, please try later.","Warning",JOptionPane.WARNING_MESSAGE);
                        return;
                    }
                 }
             }             
        }
            if (healthDepartmentOrganization == null) {
                return;
            }
            request.setVaccine(vaccine);
            request.setDosesRequest(dose);
            request.setReceiver(healthDepartmentOrganization);
            request.setSender(organization);          
            request.setStatus("Pending");
            organization.getWorkQueue().getWorkRequestList().add(request);
            system.getWorkQueue().getWorkRequestList().add(request);
            healthDepartmentOrganization.getWorkQueue().getWorkRequestList().add(request);
            JOptionPane.showMessageDialog(null,"Vaccine Request Created Successfully!");
            vaccineText.setText("");
            doseRequestText.setText("");
            populateRequestTable();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null,"Please enter doses");

        }
        
        
       
    }//GEN-LAST:event_confirmBtnActionPerformed

    private void confirmAreaBtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_confirmAreaBtnMouseExited
        Border btnBorder = BorderFactory.createMatteBorder(1, 1, 1, 1, Color.BLACK);
        confirmAreaBtn.setBorder(btnBorder);
    }//GEN-LAST:event_confirmAreaBtnMouseExited

    private void confirmAreaBtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_confirmAreaBtnMouseEntered
        Border btnBorder = BorderFactory.createMatteBorder(1, 1, 1, 1, Color.WHITE);
        confirmAreaBtn.setBorder(btnBorder);
    }//GEN-LAST:event_confirmAreaBtnMouseEntered
   public void inactiveColor(JPanel panel) {
        panel.setBackground(new Color(23, 35, 51));
    }
    
    public void activeColor(JPanel panel) {
        panel.setBackground(new Color(41, 57, 80));
    }
    
    private void confirmAreaBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confirmAreaBtnActionPerformed
        // TODO add your handling code here:   
            populateHealthComboBox();
            populateVaccineTable();
            activeColor(purchasePanelArea);
            inactiveColor(requestPanelArea);
            vaccineConfirmJPanel.setVisible(true);
            requestJPanel.setVisible(false);

    }//GEN-LAST:event_confirmAreaBtnActionPerformed

    private void tableDesLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableDesLabelMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_tableDesLabelMouseClicked

    private void tableDesLabelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableDesLabelMouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_tableDesLabelMouseExited

    private void tableDesLabelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableDesLabelMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_tableDesLabelMouseEntered

    private void tableDesLabel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableDesLabel1MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_tableDesLabel1MouseClicked

    private void tableDesLabel1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableDesLabel1MouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_tableDesLabel1MouseExited

    private void tableDesLabel1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableDesLabel1MouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_tableDesLabel1MouseEntered


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField addressText;
    private javax.swing.JButton confirmAreaBtn;
    private javax.swing.JButton confirmBtn;
    private javax.swing.JTextField doseRequestText;
    private javax.swing.JButton editBtn;
    private javax.swing.JTextField emailText;
    private javax.swing.JLabel headLabel;
    private javax.swing.JComboBox<Object> healthDepartmentComboBox;
    private javax.swing.JPanel infoJPanel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JPanel leftJPanel;
    private javax.swing.JButton logOutBtn;
    private javax.swing.JTextField nameText;
    private javax.swing.JTextField passwordText;
    private javax.swing.JTextField phoneNumText;
    private javax.swing.JLabel photoLabel;
    private javax.swing.JLabel photoLabel1;
    private javax.swing.JPanel purchasePanelArea;
    private javax.swing.JButton requestAreaBtn;
    private javax.swing.JPanel requestJPanel;
    private javax.swing.JPanel requestPanelArea;
    private javax.swing.JButton saveBtn;
    private javax.swing.JButton selectBtn;
    private javax.swing.JLabel tableDesLabel;
    private javax.swing.JLabel tableDesLabel1;
    private javax.swing.JPanel topJPanel;
    private javax.swing.JLabel uploadLabel;
    private javax.swing.JTextField usernameText;
    private javax.swing.JPanel vaccineConfirmJPanel;
    private javax.swing.JTable vaccineRequestTable;
    private javax.swing.JTable vaccineTable;
    private javax.swing.JTextField vaccineText;
    private javax.swing.JPanel workAreaJPanel;
    // End of variables declaration//GEN-END:variables

    private void populateVaccineTable() {
        DefaultTableModel model = (DefaultTableModel) vaccineTable.getModel();
        model.setRowCount(0);
        
        for (Vaccine keyV : organization.getVaccineDirectory().getVaccineMap().keySet()) {
            int count = 0;            
            for (Vaccine v : organization.getVaccineDirectory().getVaccineMap().get(keyV)) {                
                count += v.getDoseInStock();
            }    
            Object[] row = new Object[2];
            row[0] = keyV;
            row[1] = keyV.getDescription();
            //row[1] = count; 
            //row[2] = count == 0 ? "Out of Stock" : null;
            model.addRow(row);
        }
        
    }

     void populateTextField() {
        headLabel.setEnabled(false);            
        headLabel.setText("Doctor: " + userAccount.getEmployee().getName());
        headLabel.setBackground(new Color(51, 153, 255));
        headLabel.setForeground(Color.BLACK);
        headLabel.setFont(new Font("Serif", Font.BOLD, 18));
                
        nameText.setText(userAccount.getEmployee().getName());
        phoneNumText.setText(userAccount.getEmployee().getPhoneNum());
        addressText.setText(userAccount.getEmployee().getAddress());
        emailText.setText(userAccount.getEmployee().getEmail());
        photoLabel.setIcon(userAccount.getEmployee().getPhoto());
        usernameText.setText(userAccount.getUsername());
        passwordText.setText(userAccount.getPassword());  
    }

    private void populateRequestTable() {
        DefaultTableModel model = (DefaultTableModel) vaccineRequestTable.getModel();
        model.setRowCount(0);
        Object[] row = new Object[5];        
        for (WorkRequest r : organization.getWorkQueue().getWorkRequestList()) {            
            if (r instanceof VaccineDoctorRequest) {
                row[0] = r;
                row[1] = r.getId();
                row[2] = ((VaccineDoctorRequest) r).getDosesRequest();
                row[3] = r.getReceiver();
                row[4] = r.getStatus();
                model.addRow(row);
            }
        } //To change body of generated methods, choose Tools | Templates.
    }
}
