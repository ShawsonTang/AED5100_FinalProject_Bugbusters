/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.VaccineManagerRole;

import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Network.Network;
import Business.Organization.FactoryOrganization;
import Business.Organization.HealthDepartmentOrganization;
import Business.Organization.Organization;
import Business.Organization.WarehouseOrganization;
import Business.UserAccount.UserAccount;
import Business.Vaccine.Vaccine;
import Business.WorkQueue.VaccineDoctorRequest;
import Business.WorkQueue.VaccineProduceRequest;
import Business.WorkQueue.VaccinePurchaseRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.awt.Color;
import java.awt.Font;
import javax.swing.BorderFactory;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.border.Border;
import javax.swing.table.DefaultTableModel;
import userinterface.SignIn;

/**
 *
 * @author Jasmine
 */
public class OldVaccineManagerJPanel extends javax.swing.JPanel {
    private JPanel container;
    private HealthDepartmentOrganization organization;
    private Enterprise enterprise;
    private Network network;
    private UserAccount userAccount;
    private EcoSystem system;
    /**
     * Creates new form VaccineManagerJPanel
     */
    public OldVaccineManagerJPanel(JPanel container, UserAccount userAccount, HealthDepartmentOrganization organization, Enterprise enterprise, Network network, EcoSystem system) {
        initComponents();
        this.container = container;
        this.organization = organization;
        this.enterprise = enterprise;
        this.network = network;
        this.userAccount = userAccount;
        this.system = system;        
        populateTextField();
        populateDoctorRequestTable();
        populateVaccineTotalTable();
        populatePurchaseTable();
        showRegisterLabelContent();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        addressText = new javax.swing.JTextField();
        nameText = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        phoneNumText = new javax.swing.JTextField();
        declineVaccineButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        vaccineTable = new javax.swing.JTable();
        approveVaccineButton = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        viewProviderButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        providerTable = new javax.swing.JTable();
        declineProviderButton = new javax.swing.JButton();
        enterpriseLabel = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        approveProviderButton = new javax.swing.JButton();
        photoText = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        passwordText = new javax.swing.JTextField();
        usernameText = new javax.swing.JTextField();
        viewVaccineButton = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        addressText1 = new javax.swing.JTextField();
        nameText1 = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        phoneNumText1 = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        vaccineTotalTable = new javax.swing.JTable();
        jLabel12 = new javax.swing.JLabel();
        viewProviderButton1 = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        doctorRequestTable = new javax.swing.JTable();
        declineProviderButton1 = new javax.swing.JButton();
        enterpriseLabel1 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        approveProviderButton1 = new javax.swing.JButton();
        photoText1 = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        passwordText1 = new javax.swing.JTextField();
        usernameText1 = new javax.swing.JTextField();
        jScrollPane5 = new javax.swing.JScrollPane();
        vaccinePurchaseTable = new javax.swing.JTable();
        purchaseBtn = new javax.swing.JButton();
        confirmBtn = new javax.swing.JButton();
        logOutBtn = new javax.swing.JButton();
        registerLabel = new javax.swing.JLabel();

        jLabel2.setText("Name:");

        addressText.setEditable(false);
        addressText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addressTextActionPerformed(evt);
            }
        });

        nameText.setEditable(false);
        nameText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nameTextActionPerformed(evt);
            }
        });

        jLabel6.setText("Address:");

        phoneNumText.setEditable(false);
        phoneNumText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                phoneNumTextActionPerformed(evt);
            }
        });

        declineVaccineButton.setText("Decline");

        vaccineTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(vaccineTable);

        approveVaccineButton.setText("Approve");

        jLabel9.setText("Password:");

        viewProviderButton.setText("View");

        providerTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(providerTable);

        declineProviderButton.setText("Decline");

        enterpriseLabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        enterpriseLabel.setText("Ware House Manager");

        jLabel8.setText("Username:");

        approveProviderButton.setText("Approve");

        photoText.setEditable(false);
        photoText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                photoTextActionPerformed(evt);
            }
        });

        jLabel10.setText("Photo:");

        jLabel7.setText("Phone Number:");

        passwordText.setEditable(false);
        passwordText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                passwordTextActionPerformed(evt);
            }
        });

        usernameText.setEditable(false);
        usernameText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                usernameTextActionPerformed(evt);
            }
        });

        viewVaccineButton.setText("View");

        jLabel3.setText("Name:");

        addressText1.setEditable(false);
        addressText1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addressText1ActionPerformed(evt);
            }
        });

        nameText1.setEditable(false);
        nameText1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nameText1ActionPerformed(evt);
            }
        });

        jLabel11.setText("Address:");

        phoneNumText1.setEditable(false);
        phoneNumText1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                phoneNumText1ActionPerformed(evt);
            }
        });

        vaccineTotalTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Vaccine", "Stock", "Alert"
            }
        ));
        jScrollPane3.setViewportView(vaccineTotalTable);
        if (vaccineTotalTable.getColumnModel().getColumnCount() > 0) {
            vaccineTotalTable.getColumnModel().getColumn(2).setResizable(false);
        }

        jLabel12.setText("Password:");

        viewProviderButton1.setText("View");

        doctorRequestTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Vaccine", "Doses Request", "Sender", "Status"
            }
        ));
        jScrollPane4.setViewportView(doctorRequestTable);

        declineProviderButton1.setText("Decline");
        declineProviderButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                declineProviderButton1ActionPerformed(evt);
            }
        });

        enterpriseLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        enterpriseLabel1.setText("Vaccine Manager");

        jLabel13.setText("Username:");

        approveProviderButton1.setText("Approve");
        approveProviderButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                approveProviderButton1ActionPerformed(evt);
            }
        });

        photoText1.setEditable(false);
        photoText1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                photoText1ActionPerformed(evt);
            }
        });

        jLabel14.setText("Photo:");

        jLabel15.setText("Phone Number:");

        passwordText1.setEditable(false);
        passwordText1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                passwordText1ActionPerformed(evt);
            }
        });

        usernameText1.setEditable(false);
        usernameText1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                usernameText1ActionPerformed(evt);
            }
        });

        vaccinePurchaseTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Vaccine", "Dose Purchase", "Receiver", "Status"
            }
        ));
        jScrollPane5.setViewportView(vaccinePurchaseTable);

        purchaseBtn.setText("Purchase");
        purchaseBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                purchaseBtnActionPerformed(evt);
            }
        });

        confirmBtn.setText("Confirm");
        confirmBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confirmBtnActionPerformed(evt);
            }
        });

        logOutBtn.setText("Log Out");
        logOutBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logOutBtnActionPerformed(evt);
            }
        });

        registerLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                registerLabelMouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                registerLabelMouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                registerLabelMouseEntered(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(52, 52, 52)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel13)
                            .addComponent(jLabel12))
                        .addGap(36, 36, 36)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(usernameText1, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(passwordText1, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel11)
                            .addComponent(jLabel3)
                            .addComponent(jLabel15)
                            .addComponent(jLabel14))
                        .addGap(40, 40, 40)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(addressText1, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(nameText1, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(phoneNumText1, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(photoText1, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 232, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(24, 24, 24))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(81, 81, 81)
                            .addComponent(declineProviderButton1)
                            .addGap(8, 8, 8))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(confirmBtn)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(viewProviderButton1)))
                            .addGap(21, 21, 21)))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(purchaseBtn)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(approveProviderButton1))))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addComponent(logOutBtn)
                        .addGap(182, 182, 182)
                        .addComponent(enterpriseLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(210, 210, 210)
                        .addComponent(registerLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 320, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(enterpriseLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(logOutBtn))
                .addGap(3, 3, 3)
                .addComponent(registerLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(nameText1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11)
                            .addComponent(addressText1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(23, 23, 23)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel15)
                            .addComponent(phoneNumText1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(viewProviderButton1)
                            .addComponent(declineProviderButton1)
                            .addComponent(approveProviderButton1))))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel14)
                            .addComponent(photoText1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(27, 27, 27)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel13)
                            .addComponent(usernameText1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(40, 40, 40)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel12)
                            .addComponent(passwordText1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(purchaseBtn)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(confirmBtn)
                .addContainerGap(41, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void addressTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addressTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_addressTextActionPerformed

    private void nameTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nameTextActionPerformed

    private void phoneNumTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_phoneNumTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_phoneNumTextActionPerformed

    private void photoTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_photoTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_photoTextActionPerformed

    private void passwordTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_passwordTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_passwordTextActionPerformed

    private void usernameTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_usernameTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_usernameTextActionPerformed

    private void addressText1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addressText1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_addressText1ActionPerformed

    private void nameText1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameText1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nameText1ActionPerformed

    private void phoneNumText1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_phoneNumText1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_phoneNumText1ActionPerformed

    private void photoText1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_photoText1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_photoText1ActionPerformed

    private void passwordText1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_passwordText1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_passwordText1ActionPerformed

    private void usernameText1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_usernameText1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_usernameText1ActionPerformed

    private void approveProviderButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_approveProviderButton1ActionPerformed
        // TODO add your handling code here:
        int selectedRow = doctorRequestTable.getSelectedRow();
        if (selectedRow < 0){
            JOptionPane.showMessageDialog(null,"Please select a row from table first.","Warning",JOptionPane.WARNING_MESSAGE);
            return;
        }
        VaccineDoctorRequest vaccineDoctorRequest = (VaccineDoctorRequest) doctorRequestTable.getValueAt(selectedRow, 0);
        vaccineDoctorRequest.setStatus("Approved");
//        Vaccine selectedVaccine = vaccineDoctorRequest.getVaccine();
//        DefaultTableModel model = (DefaultTableModel) vaccineTable.getModel();
//        for (int count = 0; count < model.getRowCount(); count++) {
//            Vaccine target = (Vaccine) model.getValueAt(count, 0);
//            if (selectedVaccine.getVaccineType().equals(target.getVaccineType())) {
//                target.setDoseProdeced(vaccineDoctorRequest.getDosesRequest());
//            }
//        }
       
        populateDoctorRequestTable();
        
    }//GEN-LAST:event_approveProviderButton1ActionPerformed

    private void purchaseBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_purchaseBtnActionPerformed
        int selectedRow = vaccineTotalTable.getSelectedRow();
        if (selectedRow < 0){
            JOptionPane.showMessageDialog(null,"Please select a row from table first.","Warning",JOptionPane.WARNING_MESSAGE);
            return;
        }
        Vaccine selectedVaccine = (Vaccine) vaccineTotalTable.getValueAt(selectedRow, 0);
        VaccinePurchaseJPanel vaccinePurchaseJPanel = new VaccinePurchaseJPanel(container, organization, enterprise, network, selectedVaccine,system);
        container.add("vaccinePurchase", vaccinePurchaseJPanel);
        CardLayout layout = (CardLayout) container.getLayout();
        layout.next(container);
    }//GEN-LAST:event_purchaseBtnActionPerformed

    private void logOutBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logOutBtnActionPerformed
        //        container.removeAll();
        //        JPanel blankJP = new JPanel();
        //        container.add("blank", blankJP);
        //        CardLayout crdLyt = (CardLayout) container.getLayout();
        //        crdLyt.next(container);
        this.setVisible(false);
        new SignIn().setVisible(true);
    }//GEN-LAST:event_logOutBtnActionPerformed
    
    private void showRegisterLabelContent() {
        if (this.organization.isRegistered() == false) {
            registerLabel.setText("Please register with a regulator before you process your work");
            registerLabel.setForeground(Color.RED);
            registerLabel.setBackground(Color.RED);
        }
        else {
            registerLabel.setText("Vaccine Manager");
            registerLabel.setForeground(Color.BLACK);
            registerLabel.setFont(new Font("Serif", Font.BOLD, 18));
        }
    }
    
    private void registerLabelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_registerLabelMouseEntered
        if (this.organization.isRegistered() == false) {
            Border labelBorder = BorderFactory.createMatteBorder(0, 0, 1, 0, Color.RED);
            registerLabel.setBorder(labelBorder);            
        }        
    }//GEN-LAST:event_registerLabelMouseEntered

    private void registerLabelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_registerLabelMouseExited
        registerLabel.setBorder(null);
    }//GEN-LAST:event_registerLabelMouseExited

    private void registerLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_registerLabelMouseClicked
        RegistrationJPanel registrationJPanel = new RegistrationJPanel(container, organization, network);
        container.add("registrationJPanel", registrationJPanel);
        CardLayout layout = (CardLayout) container.getLayout();
        layout.next(container);
    }//GEN-LAST:event_registerLabelMouseClicked

    private void declineProviderButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_declineProviderButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_declineProviderButton1ActionPerformed

    private void confirmBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confirmBtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_confirmBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField addressText;
    private javax.swing.JTextField addressText1;
    private javax.swing.JButton approveProviderButton;
    private javax.swing.JButton approveProviderButton1;
    private javax.swing.JButton approveVaccineButton;
    private javax.swing.JButton confirmBtn;
    private javax.swing.JButton declineProviderButton;
    private javax.swing.JButton declineProviderButton1;
    private javax.swing.JButton declineVaccineButton;
    private javax.swing.JTable doctorRequestTable;
    private javax.swing.JLabel enterpriseLabel;
    private javax.swing.JLabel enterpriseLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JButton logOutBtn;
    private javax.swing.JTextField nameText;
    private javax.swing.JTextField nameText1;
    private javax.swing.JTextField passwordText;
    private javax.swing.JTextField passwordText1;
    private javax.swing.JTextField phoneNumText;
    private javax.swing.JTextField phoneNumText1;
    private javax.swing.JTextField photoText;
    private javax.swing.JTextField photoText1;
    private javax.swing.JTable providerTable;
    private javax.swing.JButton purchaseBtn;
    private javax.swing.JLabel registerLabel;
    private javax.swing.JTextField usernameText;
    private javax.swing.JTextField usernameText1;
    private javax.swing.JTable vaccinePurchaseTable;
    private javax.swing.JTable vaccineTable;
    private javax.swing.JTable vaccineTotalTable;
    private javax.swing.JButton viewProviderButton;
    private javax.swing.JButton viewProviderButton1;
    private javax.swing.JButton viewVaccineButton;
    // End of variables declaration//GEN-END:variables

    private void populateDoctorRequestTable() {
        DefaultTableModel model = (DefaultTableModel) doctorRequestTable.getModel();
        model.setRowCount(0);
        Object[] row = new Object[4];        
        for (WorkRequest r : organization.getWorkQueue().getWorkRequestList()) {            
            if (r instanceof VaccineDoctorRequest) {
                row[0] = r;
                row[1] = ((VaccineDoctorRequest) r).getDosesRequest();
                row[2] = r.getSender();
                row[3] = r.getStatus();
                model.addRow(row);
            }
        }
    }

    void populateTextField() {
        nameText1.setText(userAccount.getEmployee().getName());
        phoneNumText.setText(userAccount.getEmployee().getPhoneNum());
        //photo needs to implement 
        //photoLabel1.setIcon(userAccount.getEmployee().getPhoto());
//        System.out.println(userAccount.getEmployee().getPhoto());
        usernameText.setText(userAccount.getUsername());
        passwordText.setText(userAccount.getPassword());    
    }
    
    void populatePurchaseTable() {
        DefaultTableModel model = (DefaultTableModel) vaccinePurchaseTable.getModel();
        model.setRowCount(0);
        Object[] row = new Object[4];        
        for (WorkRequest r : organization.getWorkQueue().getWorkRequestList()) {            
            if (r instanceof VaccinePurchaseRequest) {
                row[0] = r;
                row[1] = ((VaccinePurchaseRequest) r).getDosesPurchase();
                row[2] = r.getReceiver();
                row[3] = r.getStatus();
                model.addRow(row);
            }
        }
    }
    

    void populateVaccineTotalTable() {
         DefaultTableModel model = (DefaultTableModel) vaccineTotalTable.getModel();
        model.setRowCount(0);
        
        for (Vaccine keyV : organization.getVaccineDirectory().getVaccineMap().keySet()) {
            int count = 0;            
            for (Vaccine v : organization.getVaccineDirectory().getVaccineMap().get(keyV)) {                
                count += v.getDoseInStock();
            }    
            Object[] row = new Object[3];
            row[0] = keyV;
            row[1] = count; 
            row[2] = count == 0 ? "Out of Stock" : null;
            model.addRow(row);
        }        
    }
}
